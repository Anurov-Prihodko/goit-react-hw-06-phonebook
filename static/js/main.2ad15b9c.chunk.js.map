{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-types.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/phonebook/contacts-reducer.js","redux/store.js","index.js","App.module.css"],"names":["module","exports","ADD","DELETE","TOGGLE_COMPLETED","CHANGE_FILTER","connect","dispatch","addContact","name","number","type","payload","id","shortid","generate","completed","useState","setName","setNumber","handleChange","event","target","value","className","s","contactEditor","onSubmit","e","preventDefault","label","onChange","textarea","pattern","title","required","button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","trim","contact","includes","mainState","contacts","onDeleteContact","contactId","deleteContact","onToggleCompleted","toggleCompleted","list","map","classNames","item","checkbox","checked","text","pug","onClick","state","totalContactsCount","length","completeContactsCount","reduce","acc","todo","container","mainTitle","contactsArray","combineReducers","find","alert","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ad15b9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Qj6z\",\"text\":\"Filter_text__2Hem9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactEditor\":\"ContactForm_contactEditor__6wCNT\",\"textarea\":\"ContactForm_textarea__1gBK0\",\"label\":\"ContactForm_label__2afBv\",\"button\":\"ContactForm_button__3zxmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2vaue\",\"item\":\"ContactList_item__Jwb7n\",\"completed\":\"ContactList_completed__3JaYc\",\"pug\":\"ContactList_pug__1c3zP\",\"text\":\"ContactList_text__3JlvE\",\"checkbox\":\"ContactList_checkbox__GXiao\"};","const ADD = 'phonebook/add';\r\nconst DELETE = 'phonebook/delete';\r\nconst TOGGLE_COMPLETED = 'phonebook/toggleCompleted';\r\nconst CHANGE_FILTER = 'phonebook/changeFilter';\r\n\r\nexport { ADD, DELETE, TOGGLE_COMPLETED, CHANGE_FILTER };\r\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  addContact,\n  // getVisibleContacts,\n} from '../../redux/phonebook/phonebook-actions';\nimport { connect } from 'react-redux';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.contactEditor} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          className={s.textarea}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          className={s.textarea}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: (name, number) => dispatch(addContact(name, number)),\n  // getVisibleContacts: () => dispatch(getVisibleContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n","import shortid from 'shortid';\r\nimport {\r\n  ADD,\r\n  DELETE,\r\n  TOGGLE_COMPLETED,\r\n  CHANGE_FILTER,\r\n} from './phonebook-types';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n    completed: false,\r\n  },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nconst toggleCompleted = contactId => ({\r\n  type: TOGGLE_COMPLETED,\r\n  payload: contactId,\r\n});\r\n\r\nexport { addContact, deleteContact, changeFilter, toggleCompleted };\r\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport {\n  deleteContact,\n  toggleCompleted,\n} from '../../redux/phonebook/phonebook-actions';\n\nconst ContactList = ({ contacts, onDeleteContact, onToggleCompleted }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number, completed }) => (\n      <li key={id} className={classNames(s.item, { [s.completed]: completed })}>\n        <input\n          type=\"checkbox\"\n          className={s.checkbox}\n          checked={completed}\n          onChange={() => onToggleCompleted(id)}\n        />\n        <p className={s.text}>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={s.pug}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  onToggleCompleted: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ mainState: { contacts, filter } }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\n  onToggleCompleted: contactId => dispatch(toggleCompleted(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input type=\"text\" className={s.text} value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.mainState.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n// import shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nimport s from './App.module.css';\n\nfunction App({ contacts }) {\n  // const [contacts, setContacts] = useState(\n  //   JSON.parse(localStorage.getItem('contacts')) ?? [\n  //     {\n  //       id: '',\n  //       name: '',\n  //       number: '',\n  //       completed: false,\n  //     },\n  //   ],\n  // );\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  const getCompletedContactCount = () => {\n    return contacts.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0);\n  };\n\n  const totalContactsCount = contacts.length;\n  const completeContactsCount = getCompletedContactCount();\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.mainTitle}>Phonebook</h1>\n      <p className={s.text}>All contacts: {totalContactsCount}</p>\n      <p className={s.text}>Number of selected: {completeContactsCount} </p>\n\n      <ContactForm />\n      <h2 className={s.mainTitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.mainState.contacts,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport {\r\n  ADD,\r\n  DELETE,\r\n  TOGGLE_COMPLETED,\r\n  CHANGE_FILTER,\r\n} from './phonebook-types';\r\n\r\nconst contactsArray = [\r\n  {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n    completed: false,\r\n  },\r\n];\r\n\r\nconst contacts = (state = contactsArray, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD:\r\n      if (state.find(({ name }) => name === payload.name)) {\r\n        alert(`${payload.name} is already in contacts.`);\r\n        return [...state];\r\n      }\r\n      return [...state, payload];\r\n\r\n    case DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    case TOGGLE_COMPLETED:\r\n      return state.map(contact =>\r\n        contact.id === payload\r\n          ? { ...contact, completed: !contact.completed }\r\n          : contact,\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contacts from './phonebook/contacts-reducer';\r\n// import filter from './phonebook/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  mainState: contacts,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n// import { addContact } from './redux/phonebook/phonebook-actions';\n\n// console.log(store);\n// console.log(store.getState());\n// console.log(store.dispatch(addContact()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1kB37\",\"mainTitle\":\"App_mainTitle__VKuI4\",\"text\":\"App_text__XS2ua\"};"],"sourceRoot":""}